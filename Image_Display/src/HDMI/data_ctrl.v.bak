module data_ctrl(
	input clk,
	input rst_n,
	
	input cmos_frame_vsync,
	input cmos_frame_href,
	input [15:0] cmos_frame_data,
	output [15:0] wr_data
);

parameter h_count = 11'd480;
parameter h_total = 11'd600;

reg [10:0] count;
reg href_d0;
reg href_d1;
wire href_posed;

assign href_posed = href_d0 & (~href_d1);


always @(posedge clk or negedge rst_n)
begin
	if(!rst_n) begin href_d0<=1'b0; href_d1<=1'b0; end
	else 
	begin
		href_d0<=cmos_frame_href;
		href_d1<=href_d0;
	end
end

always @(posedge clk or negedge rst_n)
begin
	if(!rst_n) begin count<=10'b0; end
	else if(count == h_total) count<=10'b0;
	else count<=count+1'b1;
end

always @(posedge clk or negedge rst_n)
begin
	if(!rst_n) begin wr_data<=16'b0; end
	else 
	begin
		if(
	end
end

endmodule 
